 public static int check(String filePath, String[] programOutput) {

        ArrayList a1 = new ArrayList();

        try {

            File data = new File(filePath);
            Scanner sc = new Scanner(data);
            String line;

            while (sc.hasNextLine()) {
                line = sc.nextLine();
                String[] parts = line.split(" ");
                char[] ints = parts[0].toCharArray();
                a1.add(new compareResult(ints, Integer.parseInt(parts[1])));
            }

        } catch (FileNotFoundException ex) {
            System.out.println(ex);
        }

        int found = 0;

        for (int i = 0; i < a1.size(); i++) {
            for (int j = 0; j < programOutput.length; j++) {

                compareResult c = (compareResult) a1.get(i);

                char[] pRule = programOutput[j].substring(0, 5).toCharArray();
                int pOutput = Integer.parseInt(programOutput[j].substring(5, 6));

                if (match(c.rule, pRule)) {
                    if (c.outputVariable == pOutput) {
                        found++;
                    }
                }
            }
        }

        return found;

    }


  //    public static int check(String filePath, String[] programOutput) {
//
//        ArrayList a1 = new ArrayList();
//        
//        try {
//
//            File data = new File(filePath);
//            Scanner sc = new Scanner(data);
//            String line;
//
//            while (sc.hasNextLine()) {
//                line = sc.nextLine();
//                String[] parts = line.split(" ");
//                char[] ints = parts[0].toCharArray();
//                a1.add(new compareResult(ints, Integer.parseInt(parts[1])));
//            }
//
//        } catch (FileNotFoundException ex) {
//            System.out.println(ex);
//        }
//
//        int found = 0;
//        
//        for (int i = 0; i < a1.size(); i++) {
//            for (int j = 0; j < programOutput.length; j++) {
//
//                compareResult c = (compareResult) a1.get(i);
//
//                char[] pRule = programOutput[j].substring(0, 5).toCharArray();
//                int pOutput = Integer.parseInt(programOutput[j].substring(5, 6));
//
//                if (match(c.rule, pRule)) {
//                    if (c.outputVariable == pOutput) {
//                        found++;
//                    }
//                }
//            }
//        }
//        
//        return found;
//
//    }

    /**
     * Checks to see if a rule generate by the algorithm matches with a rule
     * stored in the data files
     *
     * @param a Rule generated by the GA.
     * @param b Rule stored in the data file.
     * @return Returns true if all 6 items in the arrays match with each other.
     */
    public static boolean compareRules(int[] a, int[] b) {

        int length = a.length;
        int count = 0;

        //Checking for a '2' as '2' is a wild card.
        for (int i = 0; i < length; i++) {
            if (a[i] == b[i] || a[i] == 2) {
                count++;
            }
        }

        //Returns true if all 6 items match, false otherwise
        return count == 6;
    }